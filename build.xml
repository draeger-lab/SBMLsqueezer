<?xml version="1.0"?>
<!-- $Id$ -->

<project
  name="SBMLsqueezer"
  default ="usage"
  basedir="."
>

  <target
   name="init"
   description="Initialization target"
  >
    <tstamp>
      <format property="YEAR" pattern="yyyy"/>
    </tstamp>

    <property name="Name" value="SBMLsqueezer"/>
    <property name="version" value="1.4"/>
    <property name="api.version" value="2.0 alpha"/>

    <property name="year" value="${YEAR}"/>

    <echo message="----------- ${Name} ${version} [${year}] ------------"/>
    <echo message="-----------     ${TODAY}       ------------"/>
    <echo message="-----------     ${DSTAMP} ${TSTAMP}       ------------"/>

    <property environment="env"/>
    <property name="build.compiler" value="modern"/>
    <property name="debug" value="on"/>
    <property name="optimize" value="on"/>
    <property name="deprecation" value="false"/>
    <property name="verbose" value="false"/>

    <property name="build.number" value="${DSTAMP}-${TSTAMP}"/>
    <property name="build.name" value="${version} (build ${build.number})"/>

    <property name="src" value="${basedir}/src"/>
  	<property name="classes" location="${basedir}/bin"/>
    <property name="test" value="${basedir}/test"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.src" value="${basedir}/build/src"/>
    <property name="build.dest" value="${basedir}/build/classes"/>
    <property name="doc" value="${basedir}/doc/api"/>
    <property name="lib" value="${basedir}/lib"/>
    <property name="dist" value="${basedir}/dist"/>
    <property name="dist.dir" value="${dist}/${Name}-${version}"/>
    <property name="resources" value="${basedir}/resources"/>
  	<property name="celldesigner" value="${basedir}/modules/celldesigner"/>
  	<property name="celldesigner.src" value="${celldesigner}/src"/>
  	<property name="celldesigner.test" value="${celldesigner}/test"/>
  	<property name="celldesigner.resources" value="${celldesigner}/resources"/>
  	
  	<property name="jar.name" value="${Name}_v${version}"/>
  	<property name="appJar"   value="${dist.dir}/${jar.name}_incl-libs.jar"/>

    <filter token="year"    value="${year}"/>
    <filter token="version" value="${version}"/>
    <filter token="date"    value="${TODAY}"/>
    <filter token="log"     value="true"/>
    <filter token="verbose" value="true"/>

    <!-- add everything needed to the classpath -->
    <!-- adjust the settings to your local environment -->
    <path id="classpath">
      <fileset dir="${lib}"         includes="*.jar, *.zip"/>
      <fileset dir="${lib}/garuda"  includes="*.jar, *.zip"/>
      <fileset dir="${celldesigner}/lib" includes="*.jar, *.zip"/>
    </path>
	<path id="sourcepath">
	  <fileset dir="${src}"/>
	  <fileset dir="${test}"/>
	  <fileset dir="${resources}"/>
	  <fileset dir="${celldesigner.src}"/>
	  <fileset dir="${celldesigner.test}"/>
	  <fileset dir="${celldesigner.resources}"/>
    </path>

  	<!--For Garuda -->
  	<property name="garuda.gadget" value="${dist.dir}/${jar.name}_Garuda.zip"/>
	
  </target>

  <!-- =================================================================== -->
  <!-- Displays a help message                                             -->
  <!-- =================================================================== -->
  <target
   name="usage"
   depends="init"
   description="Help on usage"
  >
    <echo message=""/>
    <echo message=""/>
    <echo message=" ${Name} Build file"/>
    <echo message=" -------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=" available targets are:"/>
    <echo message=""/>
    <echo message="   compile     --> compiles the source code"/>
    <echo message="   jar         --> generates the ${Name}.jar file"/>
    <echo message="   bigjar      --> generates the ${Name}-with-dependencies.jar file"/>
    <echo message="   javadoc     --> generates the API documentation"/>
    <echo message="   clean       --> cleans up the directory"/>
    <echo message=""/>
    <echo message=" See the comments inside the build.xml file for more details."/>
    <echo message=" -------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=""/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target
   name="prepare"
   depends="init"
   description="Prepares the build directory"
  >
    <mkdir dir="${build.dir}"/>
    <echo message="Done"/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the source code                                            -->
  <!-- =================================================================== -->
  <target
   name="prepare-src"
   depends="prepare"
   description="Prepares the source code"
  >
  	<echo message="Removing existing directories"/>
    <delete dir="${build.dest}"/>
  	
    <echo message="Creating target directories"/>
    <mkdir dir="${build.src}"/>
    <mkdir dir="${build.dest}"/>
    <mkdir dir="${build.dest}/META-INF"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="${dist.dir}"/>

    <!-- copy src files -->
    <copy todir="${build.src}" overwrite="yes">
      <fileset 
        dir="${src}"
        excludes="**/.svn*, **/*.class, **/*~, **/*.tgz, **/*.zip"
      />
     <fileset
     	dir="${test}"
     	excludes="**/.svn*, **/*.class, **/*~, **/*.tgz, **/*.zip"
     />
     <fileset
     	dir="${celldesigner.src}"
     	excludes="**/.svn*, **/*.class, **/*~, **/*.tgz, **/*.zip"
     />
     <fileset
       dir="${celldesigner.test}"
       excludes="**/.svn*, **/*.class, **/*~, **/*.tgz, **/*.zip"
     />
   </copy>

   <copy todir="${build.src}" overwrite="yes">
     <fileset 
       dir="${resources}"
       includes="org/**, **/*.properties, **/*.xml"
       excludes="**/.svn*, **/*~, **/*.tgz, **/*.zip"/>
     <fileset 
       dir="${celldesigner.resources}"
       includes="org/**, **/*.properties, **/*.xml"
       excludes="**/.svn*, **/*~, **/*.tgz, **/*.zip"/>
   </copy>
    
  </target>


  <target name="gen-build-number" unless="dev.mode" description="Modify somes files">
    <echo message="Updating the files with the build number..."/>

    <replace file="${basedir}/doc/Readme.html"
                token="[BUILD.NUMBER]"
                value="${build.name}"/>
  </target>

  <target name="gen-build-number-back" depends="jar" unless="dev.mode" description="Modify back somes files">
    <echo message="Updating back the files with [BUILD.NUMBER]..."/>

    <replace file="${basedir}/doc/Readme.html"
                token="${build.name}"
                value="[BUILD.NUMBER]"/>

  </target>

  <!-- =================================================================== -->
  <!-- Compile                                                             -->
  <!-- =================================================================== -->
  <target
    name="compile"
  	depends="svnrevision, prepare-src"
  	description="Compiles the source directory"
  >
  	<echo message="Compiling the entire SBMLsqueezer project"/>
    <javac
      classpathref="classpath"
      compiler="${build.compiler}"
      debug="${debug}"
      deprecation="${deprecation}"
      destdir="${build.dest}"
      listfiles="yes"
      memoryMaximumSize="512M"
      nowarn="no"
      optimize="${optimize}"
      source="1.6"
      sourcepathref="sourcepath"
      target="1.6"
      verbose="${verbose}"
    >
      <!-- Source -->
      <src path="${src}"/>
  	  <src path="${celldesigner.src}"/>
      <!-- Test -->
  	  <src path="${test}"/>
      <src path="${celldesigner.test}"/>
      <!-- Resources -->
  	  <src path="${resources}"/>
  	  <src path="${celldesigner.resources}"/>
    </javac>
  	
    <manifest file="${build.dest}/META-INF/MANIFEST.MF">
      <attribute name="Main-Class"             value="org.sbml.squeezer.SBMLsqueezer"/>
      <attribute name="SplashScreen-Image"     value="org/sbml/squeezer/resources/img/SBMLsqueezerSplash.gif"/>
      <attribute name="Bundle-Name"            value="${Name}" /> 
      <attribute name="Built-By"               value="${user.name}"/>
      <attribute name="Built-Date"             value="${TODAY}"/>
      <attribute name="Bundle-Revision"        value="${repository.revision}" />
	  <attribute name="Implementation-Title"   value="${Name}"/>
	  <attribute name="Implementation-Vendor"  value="University of Tuebingen"/>
	  <attribute name="Implementation-Version" value="Revision ${repository.revision} (Build ${build.number})"/>
      <attribute name="Implementation-URL"     value="http://www.cogsys.cs.uni-tuebingen.de/software/SBMLsqueezer/"/>
      <section name="${Name}">
        <attribute name="Specification-Title"    value="${Name}"/>
        <attribute name="Specification-Version"  value="${api.version}"/>
        <attribute name="Specification-Vendor"   value="Center for Bioinformatics Tuebingen (ZBIT)"/>
      </section>
    </manifest>
  
  </target>


  <target name="jar" depends="compile" description="Creates the class package">

    <copy todir="${build.dest}">
      <fileset dir="${build.src}" 
        includes="**/*.png **/*.gif **/*.xsd **/*.tmpl **/data/* **/*.xml **/*.cfg **/*.obo **/*.properties">
      </fileset>
    </copy>
    <jar jarfile="${build.dir}/${Name}-${version}.jar" basedir="${build.dest}" manifest="${build.dest}/META-INF/MANIFEST.MF"/>
  </target>

  <target name="jar-src" depends="prepare-src" description="Creates the class package and include all the dependencies jars into a big SBMLsqueezer JAR file.">
    <jar jarfile="${build.dir}/${Name}-${version}-src.jar" basedir="${build.src}" includes="**/*.java"/>
  </target>

  <target name="bigjar" depends="compile" description="Creates the class package and include all the dependencies jars into a big SBMLsqueezer jar file.">

    <!-- we use the ${build.src} to include the sources of jsbml in the resulting jar -->
    <copy todir="${build.dest}">
      <fileset
            dir="${build.src}"
            includes="**/*.png **/*.gif **/*.xsd **/*.tmpl **/data/* **/*.xml **/*.cfg **/*.obo **/*.properties **/*.java" >
      </fileset>
    </copy>
    <jar jarfile="${build.dir}/${Name}-${version}-with-dependencies.jar"
         basedir="${build.dest}"  manifest="${build.dest}/META-INF/MANIFEST.MF">
      <zipgroupfileset dir="${lib}" includes="*.jar" excludes="jsbmlbridge.jar"/>
    </jar>
  </target>
  
  <!-- =================================================================== -->
  <!-- Determines the current SVN revision number of the project           -->
  <!-- =================================================================== -->
  <target
   name="svnrevision"
   description="Determines the current SVN revions number of SBMLsqueezer and stores it in a variable."
  >
  	<exec executable="svn" outputproperty="svninfo.xml">
  	  <arg line="info --xml"/>
  	</exec>
  	<xmlproperty collapseAttributes="true">
  	  <propertyresource name="svninfo.xml"/>
  	</xmlproperty>
  	<property name="repository.revision" value="${info.entry.revision}"/>
  	<echo message="Current revision is ${repository.revision}" />
  </target>


  <!-- =================================================================== -->
  <!-- JAR including libs                                                  -->
  <!-- =================================================================== -->
  <target
   name="jar_incl-libs"
   depends="compile"
   description="Creates a JAR file including all class files and all third-party libraries, but no source files."
  >
    <jar
      compress="true"
      filesetmanifest="mergewithoutmain"
      index="true"
      indexMetaInf="true"
      jarfile="${appJar}"
      level="9"
      manifest="${build.dest}/META-INF/MANIFEST.MF"
      manifestencoding="utf-8"
      strict="warn"
      update="true"
    >
      
      <!-- TODO: compile! Include modules, test, src... -->
    	
      <!-- SBMLsqueezer Classes -->
      <fileset
        dir="${build.dest}"
      	includes="**/*.class"
        excludes="**/package.html **/package-info.class"
      />
      <fileset 
        dir="${build.src}"
        includes="**.txt, **/*.txt, **.xml, **/*.xml, **.properties, **/*.properties, **.cfg, **/*.cfg, **.obo, **/*.obo, **/*.html, **.html, **/*.htm, **.htm, **/*.png, **.png, **/*.gif, **.gif, **/*.jpg, **.jpg"
        excludes="**.java"
      />
      <fileset dir="${basedir}">
        <include name="LICENSE.txt"/>
        <include name="README.txt"/>
      </fileset>
      <fileset dir="${basedir}/licenses">
        <include name="AUTHORS.txt"/>
      </fileset>
      
      <!-- These libraries are required by most classes -->
      <zipfileset excludes="META-INF/**, COPYING.txt, licenses/COPYING.txt, overview.html, AUTHORS.txt" src="${lib}/SBML2LaTeX_v1.0alpha.jar"/>
      <zipfileset excludes="META-INF/**, COPYING.txt, licenses/COPYING.txt, overview.html, AUTHORS.txt" src="${lib}/jlatexmath-1.0.0.jar"/>
      <zipfileset excludes="META-INF/**, COPYING.txt, licenses/COPYING.txt, overview.html, AUTHORS.txt" src="${lib}/jsbml-1.0-a1-with-dependencies.jar"/>
      <zipfileset excludes="META-INF/**, COPYING.txt, licenses/COPYING.txt, overview.html, AUTHORS.txt" src="${lib}/SysBio.jar"/>
      <zipfileset excludes="META-INF/**, COPYING.txt, licenses/COPYING.txt, overview.html, AUTHORS.txt" src="${lib}/quaqua.jar"/>
      <zipfileset excludes="META-INF/**, COPYING.txt, licenses/COPYING.txt, overview.html, AUTHORS.txt" src="${lib}/garuda/garuda-csr.jar"/>
      <zipfileset excludes="META-INF/**, COPYING.txt, licenses/COPYING.txt, overview.html, AUTHORS.txt" src="${lib}/garuda/jsonic-1.2.10.jar"/>
    </jar>
    
  </target>
	
  <!-- =================================================================== -->
  <!-- Signs the JAR file                                                  -->
  <!-- =================================================================== -->
  <target
    name="sign"
  	depends="jar_incl-libs"
   	description="Signs the JAR file"
  >
    <!-- Having an "keystore" file is required. Generate it with the "keytool" in the dist directory. -->  	
	<signjar alias="${Name}" jar="${appJar}" keypass="d=dpfSBMLsqueezer!" keystore="${dist}/keystore" signedjar="${appJar}" storepass="d=dpfSBMLsqueezer!"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates JavaDoc                                                     -->
  <!-- =================================================================== -->
  <target
	name="javadoc"
  	depends="init, svnrevision"
  	description="Creates the API documentation"
  >
  	<property name="doc.location" value="${doc}/version_${version}"/>
  	<property name="icon.file.name" value="SBMLsqueezerIcon_48.png"/>
  	
    <mkdir dir="${doc.location}"/>
    <javadoc
       access="public"
       author="true"
       breakiterator="yes"
       classpathref="classpath"
       defaultexcludes="true"
       destdir="${doc.location}"
       doctitle="${Name} ${version}"
       excludepackagenames="org.sbml.squeezer.test.*"
       footer="Generated at ${TODAY}&lt;br/&gt;Version ${version} Revision ${repository.revision}"
       header="&lt;img src=&quot;resources/${icon.file.name}&quot;/&gt;"
       maxmemory="96m"
       noindex="false"
       nodeprecated="false"
       nodeprecatedlist="false"
       nonavbar="false"
       notree="false"
       overview="${src}/overview.html"
       packagenames="org.*"
       source="1.6"
       sourcepath="${src}:${test}:${resources}:${celldesigner.src}:${celldesigner.test}:${celldesigner.resources}"
       splitindex="true"
       stylesheetfile="${doc}/javadoc-style.css"
       use="true"
       version="true"
       windowtitle="${Name} ${version} API Specification"
    >
      <link href="http://docs.oracle.com/javase/6/docs/api/"/>
      <link href="http://www.biojava.org/docs/api17"/>
      <link href="http://javasourcecode.org/html/open-source/junit/junit-4.8/"/>
      <link href="http://sbml.org/Special/Software/JSBML/latest-stable/build/apidocs/"/>
      <link href="http://celldesigner.org/help/plugin/"/>
      <link href="http://www.jarvana.com/jarvana/view/org/scilab/forge/jlatexmath/0.9.6/jlatexmath-0.9.6-javadoc.jar!/"/>
      <link href="http://sbml.org/Software/libSBML/docs/java-api/"/>
      <link href="http://www.cogsys.cs.uni-tuebingen.de/software/SBML2LaTeX/doc/api/"/>
    	
      <tag name="sbml.deprecated" description="Deprecated in SBML since:"/>
      <tag name="jsbml.note" description="Note"/>
      <tag name="jsbml.warning"/>
      <tag name="doc.note" description="Documentation note"/>
    
    </javadoc>

    <!--
      This is a hack: Actually, the header doesn't allow us to place img
      tags; but we cheat by using HTML codes to hide it :-) This copies the
      icon to the right folder:
    -->
    <property name="icon.file.src" value="${resources}/org/sbml/squeezer/resources/img/${icon.file.name}"/>
    <property name="icon.file.dest" value="${doc.location}/resources/${icon.file.name}"/>
    <echo message="Copying file ${icon.file.src} to file ${icon.file.dest}..."/>
    <copy file="${icon.file.src}" tofile="${icon.file.dest}"/>

  </target>

  <target name="jar-javadoc" depends="javadoc" description="Creates the javadocs jar package">

    <jar jarfile="${build.dir}/${Name}-${version}-javadoc.jar" basedir="${doc}"/>

  </target>

  <target name="dist" depends="prepare-src" description="Creates the distribution">

    <!-- Creates the standard jar file -->

    <antcall target="clean"/>

    <antcall target="jar"/>
    <antcall target="jar-src"/>
    <copy todir="${dist.dir}" file="${build.dir}/${Name}-${version}-src.jar"/>

    <copy todir="${dist.dir}" file="${build.dir}/${Name}-${version}.jar"/>
    <copy todir="${dist}" file="${build.dir}/${Name}-${version}.jar"/>

    <!-- Creates the jar file including all the dependencies -->

    <antcall target="bigjar"/>

    <copy todir="${dist.dir}" file="${build.dir}/${Name}-${version}-with-dependencies.jar"/>
    <copy todir="${dist}" file="${build.dir}/${Name}-${version}-with-dependencies.jar"/>

    <!-- Creates and copy the generated javadoc -->
    <antcall target="jar-javadoc"/>

    <copy todir="${dist.dir}/doc/api">
      <fileset dir="${doc}/" includes="**/*">
      </fileset>
    </copy>
    <copy todir="${dist.dir}" file="${build.dir}/${Name}-${version}-javadoc.jar"/>

    <!-- Copy the source files -->
    <copy todir="${dist.dir}/src">
      <fileset dir="${build.src}/" includes="**/*">
      </fileset>
    </copy>

    <!-- Copy all the dependencies jar files -->
    <copy todir="${dist.dir}/lib">
      <fileset dir="${lib}/" includes="*.jar">
      </fileset>
    </copy>

    <copy todir="${dist.dir}">
      <fileset dir="${basedir}/" includes="LICENSE.txt NEWS.txt README AUTHORS.txt build.xml">
      </fileset>
    </copy>
    
    <copy todir="${dist.dir}/licenses">
      <fileset dir="${basedir}/licenses" includes="**/*">
      </fileset>
    </copy>

    <copy todir="${dist.dir}/doc">
      <fileset dir="${basedir}/doc" includes="**/*.pdf, **/*.jpg, **/*.java" excludes="posters/** publications/** templates/**">

      </fileset>
    </copy>

    <!-- Creates the archives to be distributed -->
    <zip basedir="${dist}" destfile="${dist}/${Name}-${version}.zip" includes="${Name}-${version}/**"/>

    <!-- Not generating a tar.gz a having only a zip file should be enough -->
    <!-- <tar basedir="${dist}" destfile="${dist}/${Name}-${version}.tar.gz" includes="${Name}-${version}/**" compression="gzip"/> -->

  </target>

  <!-- =================================================================== -->
  <!-- Cleans up the workspace                                             -->
  <!-- =================================================================== -->
  <target
	name="clean"
  	depends="init"
  	description="Cleans everything"
  >
    <delete includeEmptyDirs="true" quiet="yes">
      <fileset dir="${build.dir}" includes="**/*"/>
    </delete>
  </target>
  
  <!-- =================================================================== -->
  <!-- Creates a minimal JSBML JAR                                         -->
  <!-- =================================================================== -->
  <target
    name="minimal_jsbml"
    depends="init"
    description="Build a minimal version of JSBML for SBMLsqueezer"
  >
  	<echo message="Defining basic properties of the JSBML project"/>
  	<property name="jsbml.dir" value="${basedir}/../JSBML"/>
  	<property name="jsbml.name" value="JSBML"/>
  	<property name="jsbml.version" value="1.0-a1"/>
  	
  	<path id="jsbml.classpath">
  	  <fileset dir="${jsbml.dir}/core/lib" includes="**.jar, **/*.jar, **.zip"/>
	  <fileset dir="${jsbml.dir}/modules/libSBMLio/lib" includes="**.jar, **/*.jar, **.zip"/>
  	  <fileset dir="${jsbml.dir}/modules/celldesigner/lib" includes="**.jar, **/*.jar, **.zip"/>
  	</path>
  	
    <echo message="Determining the revision number of JSBML"/>
    <exec executable="svn" outputproperty="svninfo.xml">
      <arg line="info --xml"/>
    </exec>
    <xmlproperty collapseAttributes="true">
      <propertyresource name="svninfo.xml"/>
    </xmlproperty>
	<property name="jsbml.revision" value="${info.entry.revision}"/>

    <echo message="Compiling the entire JSBML project"/>
    <delete dir="${jsbml.dir}/bin"/>
    <mkdir dir="${jsbml.dir}/bin"/>
  	<javac
  	  classpathref="jsbml.classpath"
  	  compiler="${build.compiler}"
  	  debug="${debug}"
  	  deprecation="${deprecation}"
  	  destdir="${jsbml.dir}/bin"
  	  listfiles="yes"
  	  memoryMaximumSize="512M"
  	  nowarn="no"
  	  optimize="${optimize}"
  	  source="1.6"
  	  target="1.6"
  	  verbose="${verbose}"
  	>
  	  <!-- Source -->
  	  <src path="${jsbml.dir}/core/src"/>
  	  <src path="${jsbml.dir}/extensions/comp/src"/>
  	  <src path="${jsbml.dir}/extensions/fbc/src"/>
  	  <src path="${jsbml.dir}/extensions/groups/src"/>
  	  <src path="${jsbml.dir}/extensions/layout/src"/>
  	  <src path="${jsbml.dir}/extensions/multi/src"/>
  	  <src path="${jsbml.dir}/extensions/qual/src"/>
  	  <src path="${jsbml.dir}/extensions/render/src"/>
  	  <!-- <src path="${jsbml.dir}/extensions/spatial/src"/> -->
  	  <src path="${jsbml.dir}/modules/celldesigner/src"/>
  	  <src path="${jsbml.dir}/modules/libSBMLio/src"/>
  	  <!-- Resources -->
      <src path="${jsbml.dir}/core/resources"/>
      <src path="${jsbml.dir}/extensions/comp/resources"/>
      <src path="${jsbml.dir}/extensions/fbc/resources"/>
      <src path="${jsbml.dir}/extensions/groups/resources"/>
      <src path="${jsbml.dir}/extensions/layout/resources"/>
      <src path="${jsbml.dir}/extensions/multi/resources"/>
      <src path="${jsbml.dir}/extensions/qual/resources"/>
      <src path="${jsbml.dir}/extensions/render/resources"/>
      <!-- <src path="${jsbml.dir}/extensions/spatial/resources"/> -->
      <src path="${jsbml.dir}/modules/celldesigner/resources"/>
      <src path="${jsbml.dir}/modules/libSBMLio/resources"/>
  	</javac>
  	
    <copy file="${jsbml.dir}/AUTHORS.txt" tofile="${jsbml.dir}/core/licenses/JSBML-AUTHORS.txt"/>
  	
    <echo message="Packing a minimal JAR file containing only parts required for SBMLsqueezer"/>
    <jar
      compress="true"
      filesetmanifest="mergewithoutmain"
      index="true"
      indexMetaInf="true"
      jarfile="${lib}/jsbml-1.0-a1-with-dependencies.jar"
      level="9"
      manifestencoding="utf-8"
      strict="warn"
      update="true"
    >
      <manifest>
      	<section name="${jsbml.name}">
          <attribute name="Specification-Title" value="${jsbml.name}"/>
          <attribute name="Specification-Version" value="${jsbml.version}"/>
          <attribute name="Implementation-Title" value="${jsbml.name}"/>
      	  <attribute name="Implementation-Version" value="Revision ${jsbml.revision} (Build ${DSTAMP}-${TSTAMP})"/>
        </section>
      </manifest>
      <!-- Licenses -->
      <fileset dir="${jsbml.dir}/core">
        <include name="licenses/COPYING.txt"/>
      	<include name="licenses/COPYING.html"/>
        <include name="licenses/lib-licenses/*.txt"/>
        <include name="licenses/lib-licenses/*.html"/>
        <include name="licenses/JSBML-AUTHORS.txt"/>
      </fileset>
      <!-- Binaries -->
      <fileset
      	dir="${jsbml.dir}/bin"
    	includes="**.class **/*.class"
    	excludes="**/.svn*, **/package-info.class"
      />
      <!-- Resources -->
      <fileset dir="${jsbml.dir}/core/resources" includes="**.txt, **/*.txt, **.xml, **/*.xml, **.properties, **/*.properties, **.cfg, **/*.cfg, **.obo, **/*.obo"/>
      <fileset dir="${jsbml.dir}/extensions/comp/resources" includes="**.txt, **/*.txt, **.xml, **/*.xml, **.properties, **/*.properties, **.cfg, **/*.cfg, **.obo, **/*.obo"/>
      <fileset dir="${jsbml.dir}/extensions/fbc/resources" includes="**.txt, **/*.txt, **.xml, **/*.xml, **.properties, **/*.properties, **.cfg, **/*.cfg, **.obo, **/*.obo"/>
      <fileset dir="${jsbml.dir}/extensions/groups/resources" includes="**.txt, **/*.txt, **.xml, **/*.xml, **.properties, **/*.properties, **.cfg, **/*.cfg, **.obo, **/*.obo"/>
      <fileset dir="${jsbml.dir}/extensions/layout/resources" includes="**.txt, **/*.txt, **.xml, **/*.xml, **.properties, **/*.properties, **.cfg, **/*.cfg, **.obo, **/*.obo"/>
      <fileset dir="${jsbml.dir}/extensions/multi/resources" includes="**.txt, **/*.txt, **.xml, **/*.xml, **.properties, **/*.properties, **.cfg, **/*.cfg, **.obo, **/*.obo"/>
      <fileset dir="${jsbml.dir}/extensions/qual/resources" includes="**.txt, **/*.txt, **.xml, **/*.xml, **.properties, **/*.properties, **.cfg, **/*.cfg, **.obo, **/*.obo"/>
      <fileset dir="${jsbml.dir}/extensions/render/resources" includes="**.txt, **/*.txt, **.xml, **/*.xml, **.properties, **/*.properties, **.cfg, **/*.cfg, **.obo, **/*.obo"/>
      <!--<fileset dir="${jsbml.dir}/extensions/spatial/resources" includes="**.txt, **/*.txt, **.xml, **/*.xml, **.properties, **/*.properties, **.cfg, **/*.cfg, **.obo, **/*.obo"/>-->
      <fileset dir="${jsbml.dir}/modules/celldesigner/resources" includes="**.txt, **/*.txt, **.xml, **/*.xml, **.properties, **/*.properties, **.cfg, **/*.cfg, **.obo, **/*.obo"/>
      <fileset dir="${jsbml.dir}/modules/libSBMLio/resources" includes="**.txt, **/*.txt, **.xml, **/*.xml, **.properties, **/*.properties, **.cfg, **/*.cfg, **.obo, **/*.obo"/>
      <!-- 3rd party libraries -->
      <zipfileset excludes="META-INF/**, **/package-info.class, **/package.html, **/*.java readme.txt LICENSE" src="${jsbml.dir}/core/lib/biojava-1.7-ontology.jar"/>
      <zipfileset excludes="META-INF/**, **/package-info.class, **/package.html, **/*.java" src="${jsbml.dir}/core/lib/jigsaw-dateParser.jar"/>
      <zipfileset excludes="META-INF/**, **/package-info.class, **/package.html, **/*.java" src="${jsbml.dir}/core/lib/log4j-1.2.8.jar"/>
      <zipfileset excludes="META-INF/**, **/package-info.class, **/package.html, **/*.java" src="${jsbml.dir}/core/lib/stax-api-1.0.1.jar"/>
      <zipfileset excludes="META-INF/**, **/package-info.class, **/package.html, **/*.java" src="${jsbml.dir}/core/lib/stax2-api-3.0.3.jar"/>
      <zipfileset excludes="META-INF/**, **/package-info.class, **/package.html, **/*.java" src="${jsbml.dir}/core/lib/staxmate-2.0.0.jar"/>
      <zipfileset excludes="META-INF/**, **/package-info.class, **/package.html, **/*.java" src="${jsbml.dir}/core/lib/woodstox-core-lgpl-4.0.9.jar"/>
      <zipfileset excludes="META-INF/**, **/package-info.class, **/package.html, **/*.java" src="${jsbml.dir}/core/lib/xstream-1.3.1.jar"/>
    </jar>
  	
  	<delete file="${jsbml.dir}/core/licenses/JSBML-AUTHORS.txt"/>
  </target>
	
  <!-- =================================================================== -->
  <!-- Creates a minimal SysBio JAR                                        -->
  <!-- =================================================================== -->
  <target
    name="minimal_sysbio"
    depends="init"
    description="Build a minimal version of SysBio for SBMLsqueezer"
  >
    <!-- The relative path of the SysBio project -->
    <property name="sysbio.dir" value="${basedir}/../SysBio"/>
    <property name="sysbio.lib" value="${sysbio.dir}/lib"/>
    <path id="sysbio.classpath">
      <fileset dir="${sysbio.lib}" includes="**.jar, **/*.jar, **.zip"/>
    </path>
    <path id="sysbio.sourcepath">
      <fileset dir="${sysbio.dir}/src"/>
      <fileset dir="${sysbio.dir}/test"/>
      <fileset dir="${sysbio.dir}/resources"/>
      <fileset dir="${sysbio.dir}/examples"/>
    </path>
    
  	<echo message="Determining the revision number of SysBio"/>
    <exec executable="svn" outputproperty="svninfo.xml">
      <arg line="info --xml"/>
    </exec>
    <xmlproperty collapseAttributes="true">
      <propertyresource name="svninfo.xml"/>
    </xmlproperty>
	<property name="sysbio.revision" value="${info.entry.revision}"/>

    <echo message="Deleting all previous versions of SysBio JAR files"/>
    <delete verbose="true">
      <fileset dir="${lib}">
        <include name="SysBio**.jar"/>
      </fileset>
    </delete>

    <echo message="Compile the entire SysBio project"/>
    <delete dir="${sysbio.dir}/bin"/>
    <mkdir dir="${sysbio.dir}/bin"/>
    <javac
      classpathref="sysbio.classpath"
      compiler="${build.compiler}"
      debug="${debug}"
      deprecation="${deprecation}"
      destdir="${sysbio.dir}/bin"
      listfiles="yes"
      memoryMaximumSize="512M"
      nowarn="no"
      optimize="${optimize}"
      source="1.6"
      srcdir="${sysbio.dir}/src"
      sourcepathref="sysbio.sourcepath"
      target="1.6"
      verbose="${verbose}"
    />
    <!-- <copy todir="${sysbio.dir}/bin"/> -->

    <echo message="Packing a minimal JAR file containing only parts required for SBMLsqueezer"/>
    <jar
      compress="true"
      filesetmanifest="mergewithoutmain"
      index="true"
      indexMetaInf="true"
  	  jarfile="${lib}/SysBio.jar"
      level="9"
      manifestencoding="utf-8"
      strict="warn"
      update="true"
    >
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <section name="SysBio">
          <attribute name="Specification-Title"    value="SysBio"/>
          <attribute name="Specification-Version"  value="Revision ${sysbio.revision}"/>
          <attribute name="Specification-Vendor"   value="Center for Bioinformatics Tuebingen (ZBIT)"/>
          <attribute name="Implementation-Title"   value="SysBio"/>
          <attribute name="Implementation-Version" value="Revision ${sysbio.revision} ${TODAY} (Build ${DSTAMP}-${TSTAMP})"/>
          <attribute name="Implementation-Vendor"  value="University of Tuebingen"/>
        </section>
      </manifest>
      <fileset dir="${sysbio.dir}">
        <include name="licenses/COPYING.txt"/>
        <include name="licenses/lib-licenses/*.txt"/>
        <include name="licenses/lib-licenses/*.html"/>
        <include name="licenses/AUTHORS.txt"/>
      </fileset>
      <fileset dir="${sysbio.dir}/bin" excludes="**/.svn*, **/package-info.class">
        <include name="de/zbit/**.class"/>
        <include name="de/zbit/collection/**.class"/>
        <include name="de/zbit/garuda/**.class"/>
        <include name="de/zbit/gui/**.class"/>
        <include name="de/zbit/gui/csv/**.class"/>
        <include name="de/zbit/gui/actioncommand/**.class"/>
        <include name="de/zbit/gui/layout/**.class"/>
        <exclude name="de/zbit/gui/layout/SpringUtilities.class"/>
        <exclude name="de/zbit/gui/layout/VerticalLayout.class"/>
        <include name="de/zbit/gui/panels/**.class"/>
        <include name="de/zbit/gui/prefs/**.class"/>
        <include name="de/zbit/gui/table/**.class"/>
        <include name="de/zbit/gui/table/renderer/**.class"/>
        <include name="de/zbit/gui/wizard/**.class"/>
        <include name="de/zbit/gui/**.class"/>
        <include name="de/zbit/io/**"/>
      	<include name="de/zbit/locales/**.xml"/>
        <include name="de/zbit/math/**.class"/>
        <include name="de/zbit/resources/**.class"/>
        <include name="de/zbit/sbml/**.class"/>
        <include name="de/zbit/sbml/gui/*.class"/>
        <include name="de/zbit/sbml/io/*.class"/>
        <include name="de/zbit/sbml/layout/*.class"/>
        <exclude name="de/zbit/sbml/layout/y"/>
        <include name="de/zbit/sbml/util/*.class"/>
        <include name="de/zbit/text/**.class"/>
        <include name="de/zbit/util/*.class"/>
        <include name="de/zbit/util/argparser/**.class"/>
        <include name="de/zbit/util/logging/**.class"/>
        <include name="de/zbit/util/objectwrapper/**.class"/>
        <include name="de/zbit/util/prefs/**.class"/>
        <include name="de/zbit/util/progressbar/**"/>
        <include name="de/zbit/util/**.class"/>
      </fileset>
      <fileset dir="${sysbio.dir}/resources" excludes="**/.svn*, package-info.*">
        <include name="de/zbit/garuda/img/**.png"/>
        <include name="de/zbit/garuda/locales/**.xml"/>
        <include name="de/zbit/gui/img/**.png"/>
        <include name="de/zbit/locales/**.xml"/>
        <include name="de/zbit/sbml/locales/**.xml"/>
      </fileset>
      <zipfileset excludes="META-INF/*" src="${sysbio.dir}/lib/sysbio-osx-support.jar"/>
    </jar>

  </target>

  <!-- =================================================================== -->
  <!-- Creates a ZIP file for Garuda                                       -->
  <!-- =================================================================== -->
  <target
    name="garuda"
  	depends="sign"
    description="Creates a ZIP file for Garuda">
    
  	<property name="uuid"           value="dd624b40-7bc0-11e2-b92a-0800200c9a66"/>
  	<property name="gadget.config"  value="${dist}/gadget_config.xml"/>

  	<echo message="Updating Garuda gadget configuration..."/>
  	<replace
  	  file="${gadget.config}"
  	  token="[GADGET_UUID]"
  	  value="${uuid}"
    />
  	<replace
  	  file="${gadget.config}"
  	  token="[JAR_NAME]"
  	  value="${jar.name}_incl-libs.jar"
  	/>
  	
  	<echo message="Generating ZIP archive for Garuda..."/>
  	<zip
      compress="true"
      comment="Garuda Gadget ${Name}"
      destfile="${garuda.gadget}"
      encoding="utf-8"
      level="9"
      update="true"
   	>
      <mappedresources>
  	    <fileset file="${gadget.config}"/>
        <globmapper from="*" to="${uuid}/*"/>
      </mappedresources>
      <mappedresources>
        <fileset file="${appJar}"/>
        <globmapper from="*" to="${uuid}/*"/>
      </mappedresources>
      <mappedresources>
        <fileset file="${resources}/org/sbml/squeezer/resources/img/SBMLsqueezerIcon_64.png"/>
        <globmapper from="*" to="${uuid}/icons/*"/>
      </mappedresources>
      <mappedresources>
        <fileset file="${dist}/Screenshot_1.png"/>
        <globmapper from="*" to="${uuid}/snapshot/*"/>
      </mappedresources>
      <mappedresources>
        <fileset file="${dist}/Screenshot_2.png"/>
        <globmapper from="*" to="${uuid}/snapshot/*"/>
      </mappedresources>
      <mappedresources>
        <fileset file="${dist}/Screenshot_3.png"/>
        <globmapper from="*" to="${uuid}/snapshot/*"/>
      </mappedresources>
    </zip>
  	
  	<echo message="Reverting changes in Garuda gadget configuration file..."/>
  	<replace
  	  file="${gadget.config}"
  	  token="${uuid}"
  	  value="[GADGET_UUID]"
  	/>
  	<replace
  	  file="${gadget.config}"
  	  token="${jar.name}_incl-libs.jar"
  	  value="[JAR_NAME]"
  	/>

  </target>

  <!-- =================================================================== -->
  <!-- Creates the files for distribution and packs everything together    -->
  <!-- =================================================================== -->
  <target 
    name="zip"
    depends="javadoc,garuda"
  	description="Creates a ZIP file containing all sources, tests, resources, libs, licenses, text files, JAR file, and api documentation."
  >
  	<zip
    compress="true"
    comment="Full distribution of ${Name}"
    destfile="${dist.dir}/${jar.name}.zip"
    encoding="utf-8"
    level="9"
    update="true"
  	>
      <zipfileset dir="${src}"              prefix="src"       excludes="*svn*" includes="**/*.java,**/*.html"/>
      <zipfileset dir="${test}"             prefix="test"      excludes="*svn*" includes="**/*.java"/>
      <zipfileset dir="${resources}"        prefix="resources" excludes="*svn*" includes="**/*.java,**/*.png"/>
      <zipfileset dir="${lib}"              prefix="lib"       excludes="*svn*" includes="**/*.jar"/>
      <zipfileset dir="${basedir}/licenses" prefix="licenses"  excludes="*svn*"/>
      <zipfileset dir="${basedir}"                             excludes="*svn*,${basedir}/files" includes="*.xml, *.txt"/>
      <zipfileset dir="${doc}/version_${version}" prefix="doc/api/" excludes="*svn*,${doc}/publications,${doc}/posters"/>
      <mappedresources>
        <fileset file="${garuda.gadget}"/>
        <globmapper from="*" to="dist/*"/>
      </mappedresources>
      <mappedresources>
        <fileset file="${appJar}"/>
        <globmapper from="*" to="dist/*"/>
      </mappedresources>
    </zip>
  </target>
	
  <!-- =================================================================== -->
  <!-- Creates an UML graph for this project                               -->
  <!-- =================================================================== -->
  <target
  	name="umlgraph"
  	description="Creates an UML graph for this project"
  >
  	<input
      message="Please enter path to UmlGraph.jar:"
      addproperty="jar.path"
      defaultvalue="${user.home}/UMLGraph-5.4/lib/UmlGraph.jar"
  	/>
  	<input
      message="Please enter path to save the graph.dot:"
      addproperty="output.path"
      defaultvalue="${basedir}/doc/UMLGraph"
  	/>  	
    <javadoc access="private" additionalparam="-d ${output.path}" classpath="../SysBio/lib/junit-4.3.1.jar:../JSBML0.8/lib/xstream-1.3.1.jar:../JSBML0.8/lib/biojava-1.7-ontology.jar:../JSBML0.8/lib/jigsaw-dateParser.jar:../SysBio/lib/commons-cli-1.1.jar:../SysBio/lib/commons-discovery.jar:lib/jsbmlbridge.jar:../SysBio/lib/jaxrpc.jar:../JSBML0.8/bin:lib/HotEqn.jar:../JSBML0.8/lib/log4j-1.2.8.jar:../SBML2LaTeX/bin:../SysBio/lib/axis.jar:../SysBio/lib/Java5/saaj.jar:/afs/cs.uni-tuebingen.de/home/jpfeuffer/Downloads/eclipse/plugins/org.junit_4.8.2.v4_8_2_v20110321-1705/junit.jar:../JSBML0.8/lib/staxmate-2.0.0.jar:../SysBio/lib/WSDbfetch.jar:../JSBML0.8/lib/stax-api-1.0.1.jar:../JSBML0.8/lib/junit-4.8.jar:../SBML2LaTeX/lib/html2latex.jar:../SysBio/lib/commons-logging.jar:/afs/cs.uni-tuebingen.de/home/jpfeuffer/Downloads/eclipse/plugins/org.hamcrest.core_1.1.0.v20090501071000.jar:lib/jsbmlio.jar:../SysBio/lib/keggapi.jar:../SysBio/lib/wsdl4j.jar:../SysBio/bin:../JSBML0.8/lib/stax2-api-3.0.3.jar:../JSBML0.8/lib/woodstox-core-lgpl-4.0.9.jar" sourcefiles="src/de/zbit/gui/prefs/SettingsPanelDefaultMechanisms.java" sourcepath="src:resources:test">
      <doclet name="org.umlgraph.doclet.UmlGraph" path="${jar.path}"/>
    </javadoc>
  </target>
	
</project>
